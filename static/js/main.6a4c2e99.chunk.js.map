{"version":3,"sources":["../../src/index.js","App.js","reportWebVitals.js","index.js"],"names":["SplitPolygonMode","main","this","getSelected","filter","f","type","map","toGeoJSON","length","Error","toDisplayFeatures","state","geojson","display","changeMode","cuttingLineString","forEach","el","booleanDisjoint","polycut","poly","line","idPrefix","i","j","forCut","thickLineString","thickLinePolygon","clipped","THICK_LINE_UNITS","THICK_LINE_WIDTH","polyCoords","offsetLine","retVal","lineIntersect","features","lineOffset","units","coordinates","push","geometry","lineString","lineToPolygon","difference","polygonCut","id","_ctx","api","add","draw","drawBar","extendDrawBar","opt","ctrl","buttons","onAddOrig","onAdd","onRemoveOrig","onRemove","elContainer","b","addButton","removeButton","elButton","document","createElement","className","classes","Array","c","classList","addEventListener","on","action","appendChild","removeEventListener","remove","App","mapboxGl","getRTLTextPluginStatus","setRTLTextPlugin","err","console","error","mapRef","useRef","useEffect","Map","container","current","style","center","zoom","pitch","interactive","hash","attributionControl","customAttribution","transformRequest","url","headers","MapboxDraw","modes","splitPolygonMode","passing_mode_line_string","mapboxGlDrawPassingMode","draw_line_string","userProperties","splitPolygon","once","resize","addControl","set","properties","alert","message","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a4c2e99.chunk.js","sourcesContent":["import lineIntersect from '@turf/line-intersect';\nimport booleanDisjoint from '@turf/boolean-disjoint';\nimport { lineString } from '@turf/helpers';\nimport lineOffset from '@turf/line-offset';\nimport lineToPolygon from '@turf/line-to-polygon';\nimport difference from '@turf/difference';\n\nconst SplitPolygonMode = {};\n\nSplitPolygonMode.onSetup = function () {\n  let main = this.getSelected()\n    .filter((f) => f.type === 'Polygon' || f.type === 'MultiPolygon')\n    .map((f) => f.toGeoJSON());\n\n  if (main.length < 1) {\n    throw new Error(\n      'Please select a feature/features (Polygon or MultiPolygon) to split!'\n    );\n  }\n\n  return {\n    main,\n  };\n};\n\nSplitPolygonMode.toDisplayFeatures = function (state, geojson, display) {\n  display(geojson);\n\n  this.changeMode('passing_mode_line_string', (cuttingLineString) => {\n    state.main.forEach((el) => {\n      if (booleanDisjoint(el, cuttingLineString)) {\n        throw new Error('Line must be outside of Polygon');\n      } else {\n        let polycut = polygonCut(\n          el.geometry,\n          cuttingLineString.geometry,\n          'piece-'\n        );\n        polycut.id = el.id;\n        this._ctx.api.add(polycut);\n      }\n    });\n  });\n};\n\nexport default SplitPolygonMode;\n\n// from https://gis.stackexchange.com/a/344277/145409\nfunction polygonCut(poly, line, idPrefix) {\n  const THICK_LINE_UNITS = 'kilometers';\n  const THICK_LINE_WIDTH = 0.001;\n  var i, j, intersectPoints, forCut, forSelect;\n  var thickLineString, thickLinePolygon, clipped;\n  var polyCoords = [];\n  var offsetLine = [];\n  var retVal = null;\n\n  if (\n    (poly.type != 'Polygon' && poly.type != 'MultiPolygon') ||\n    line.type != 'LineString'\n  ) {\n    return retVal;\n  }\n\n  if (typeof idPrefix === 'undefined') {\n    idPrefix = '';\n  }\n\n  intersectPoints = lineIntersect(poly, line);\n  if (intersectPoints.features.length == 0) {\n    return retVal;\n  }\n\n  if (booleanDisjoint(line, poly)) {\n    return retVal;\n  }\n\n  offsetLine[0] = lineOffset(line, THICK_LINE_WIDTH, {\n    units: THICK_LINE_UNITS,\n  });\n  offsetLine[1] = lineOffset(line, -THICK_LINE_WIDTH, {\n    units: THICK_LINE_UNITS,\n  });\n\n  for (i = 0; i <= 1; i++) {\n    forCut = i;\n    forSelect = (i + 1) % 2;\n    polyCoords = [];\n    for (j = 0; j < line.coordinates.length; j++) {\n      polyCoords.push(line.coordinates[j]);\n    }\n    for (j = offsetLine[forCut].geometry.coordinates.length - 1; j >= 0; j--) {\n      polyCoords.push(offsetLine[forCut].geometry.coordinates[j]);\n    }\n    polyCoords.push(line.coordinates[0]);\n\n    thickLineString = lineString(polyCoords);\n    thickLinePolygon = lineToPolygon(thickLineString);\n    clipped = difference(poly, thickLinePolygon);\n  }\n  return clipped;\n}\n","import React, { useRef, useEffect } from \"react\";\nimport mapboxGl from \"mapbox-gl\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport SplitPolygonMode from \"mapbox-gl-draw-split-polygon-mode\";\nimport mapboxGlDrawPassingMode from \"mapbox-gl-draw-passing-mode\";\nimport \"./App.css\";\n\nlet map;\nlet draw;\nlet drawBar;\n\nclass extendDrawBar {\n  constructor(opt) {\n    let ctrl = this;\n    ctrl.draw = opt.draw;\n    ctrl.buttons = opt.buttons || [];\n    ctrl.onAddOrig = opt.draw.onAdd;\n    ctrl.onRemoveOrig = opt.draw.onRemove;\n  }\n  onAdd(map) {\n    let ctrl = this;\n    ctrl.map = map;\n    ctrl.elContainer = ctrl.onAddOrig(map);\n    ctrl.buttons.forEach((b) => {\n      ctrl.addButton(b);\n    });\n    return ctrl.elContainer;\n  }\n  onRemove(map) {\n    let ctrl = this;\n    ctrl.buttons.forEach((b) => {\n      ctrl.removeButton(b);\n    });\n    ctrl.onRemoveOrig(map);\n  }\n  addButton(opt) {\n    let ctrl = this;\n    var elButton = document.createElement(\"button\");\n    elButton.className = \"mapbox-gl-draw_ctrl-draw-btn\";\n    if (opt.classes instanceof Array) {\n      opt.classes.forEach((c) => {\n        elButton.classList.add(c);\n      });\n    }\n    elButton.addEventListener(opt.on, opt.action);\n    ctrl.elContainer.appendChild(elButton);\n    opt.elButton = elButton;\n  }\n  removeButton(opt) {\n    opt.elButton.removeEventListener(opt.on, opt.action);\n    opt.elButton.remove();\n  }\n}\n\nfunction App() {\n  if (mapboxGl.getRTLTextPluginStatus() === \"unavailable\")\n    mapboxGl.setRTLTextPlugin(\n      \"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js\",\n      (err) => {\n        err && console.error(err);\n      },\n      true\n    );\n  let mapRef = useRef(null);\n\n  useEffect(() => {\n    map = new mapboxGl.Map({\n      container: mapRef.current || \"\",\n      style: `https://map.ir/vector/styles/main/mapir-xyz-light-style.json`,\n      center: [51.3857, 35.6102],\n      zoom: 7.78,\n      pitch: 0,\n      interactive: true,\n      hash: true,\n      attributionControl: true,\n      customAttribution: \"© Map © Openstreetmap\",\n      transformRequest: (url) => {\n        return {\n          url: url,\n          headers: {\n            \"x-api-key\":\n              \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A\", //dev api key\n            \"Mapir-SDK\": \"reactjs\",\n          },\n        };\n      },\n    });\n    draw = new MapboxDraw({\n      modes: {\n        ...MapboxDraw.modes,\n        splitPolygonMode: SplitPolygonMode,\n        passing_mode_line_string: mapboxGlDrawPassingMode(\n          MapboxDraw.modes.draw_line_string\n        ),\n      },\n      userProperties: true,\n    });\n    drawBar = new extendDrawBar({\n      draw: draw,\n      buttons: [\n        {\n          on: \"click\",\n          action: splitPolygon,\n          classes: [\"split-icon\"]\n        }\n      ],\n    });\n    map.once(\"load\", () => {\n      map.resize();\n      map.addControl(drawBar, \"top-right\");\n      draw.set({\n        type: \"FeatureCollection\",\n        features: [\n          {\n            type: \"Feature\",\n            properties: {},\n            id: \"example-id\",\n            geometry: {\n              coordinates: [\n                [\n                  [\n                    [52, 35],\n                    [53, 35],\n                    [53, 36],\n                    [52, 36],\n                    [52, 35],\n                  ],\n                ],\n                [\n                  [\n                    [50, 35],\n                    [51, 35],\n                    [51, 36],\n                    [50, 36],\n                    [50, 35],\n                  ],\n                  [\n                    [50.2, 35.2],\n                    [50.8, 35.2],\n                    [50.8, 35.8],\n                    [50.2, 35.8],\n                    [50.2, 35.2],\n                  ],\n                ],\n              ],\n              type: \"MultiPolygon\",\n            },\n          },\n        ],\n      });\n    });\n  }, []);\n  const splitPolygon = () => {\n    try {\n      draw?.changeMode(\"splitPolygonMode\");\n    } catch (err) {\n      alert(err.message);\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"map-wrapper\">\n      <div id=\"map\" ref={mapRef} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}